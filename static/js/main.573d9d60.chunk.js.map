{"version":3,"sources":["Components/TodoList.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","id","todo","title","onClick","onDelete","Body","useState","setTitle","todos","setTodos","addTodo","console","log","myTodo","sno","length","filter","e","onSubmit","preventDefault","alert","type","placeholder","value","onChange","target","map","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAsBeA,MAnBf,SAAkBC,GAChB,OACE,8BACE,qBAAKC,GAAG,WAAR,SACE,8BACGD,EAAME,KAAKC,MACZ,sBACEC,QAAS,WACPJ,EAAMK,SAASL,EAAME,OAFzB,uBCkEKI,MAtEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAYMC,EAAU,SAACR,GACfS,QAAQC,IAAIV,GASZ,IAAMW,EAAS,CACbC,IAPmB,IAAjBN,EAAMO,OACF,EAEAP,EAAMA,EAAMO,OAAS,GAAGD,IAAM,EAKpCZ,MAAOA,GAETS,QAAQC,IAAIC,GACZJ,EAAS,GAAD,mBAAKD,GAAL,CAAYK,MAGhBT,EAAW,SAACH,GAChBQ,EACED,EAAMQ,QAAO,SAACC,GACZ,OAAOA,IAAMhB,OAKnB,OACE,sBAAKD,GAAG,OAAR,UACE,oBAAIA,GAAG,UAAP,uBACA,uBAAMA,GAAG,OAAOkB,SAvCL,SAACD,GACdA,EAAEE,iBACGjB,GAGHQ,EAAQR,GACRK,EAAS,KAHTa,MAAM,0BAoCN,UACE,uBACEC,KAAK,OACLC,YAAY,mBACZtB,GAAG,QACHuB,MAAOrB,EACPsB,SAAU,SAACP,GACTV,EAASU,EAAEQ,OAAOF,UAGtB,wBAAQF,KAAK,SAASrB,GAAG,SAAzB,oBAKF,oBAAIA,GAAG,OAAP,wBACkB,IAAjBQ,EAAMO,OACH,mBAAGf,GAAG,QAAN,kCACAQ,EAAMkB,KAAI,SAACzB,GACT,OACI,cAAC,EAAD,CAAUA,KAAMA,EAAqBG,SAAUA,GAApBH,EAAKa,YCxDjCa,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.573d9d60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport todoList from \"./todoList.css\";\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <div>\r\n      <div id=\"todolist\">\r\n        <p>\r\n          {props.todo.title}\r\n          <span\r\n            onClick={() => {\r\n              props.onDelete(props.todo);\r\n            }}\r\n          >\r\n            X\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport \"./body.css\";\r\nimport { useState } from \"react\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction Body() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!title) {\r\n      alert(\"Todo cannot be empty.\");\r\n    } else {\r\n      addTodo(title);\r\n      setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  const addTodo = (title) => {\r\n    console.log(title);\r\n\r\n    let sno;\r\n    if (todos.length === 0) {\r\n      sno = 0;\r\n    } else {\r\n      sno = todos[todos.length - 1].sno + 1;\r\n    }\r\n\r\n    const myTodo = {\r\n      sno: sno,\r\n      title: title,\r\n    };\r\n    console.log(myTodo);\r\n    setTodos([...todos, myTodo]);\r\n  };\r\n\r\n  const onDelete = (todo) => {\r\n    setTodos(\r\n      todos.filter((e) => {\r\n        return e !== todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <h1 id=\"heading\">ToDo List</h1>\r\n      <form id=\"form\" onSubmit={submit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter the todos.\"\r\n          id=\"input\"\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n        <button type=\"submit\" id=\"submit\">\r\n          Add\r\n        </button>\r\n      </form>\r\n\r\n      <h2 id=\"list\">Todo List:</h2>\r\n      {todos.length === 0\r\n        ? <p id='list2'>No Todos to display.</p>\r\n        : todos.map((todo) => {\r\n            return(\r\n                <TodoList todo={todo} key={todo.sno} onDelete={onDelete} />\r\n            )\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport Body from './Components/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Body/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}